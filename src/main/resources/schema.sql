drop table if exists available_place CASCADE;
drop table if exists events CASCADE;
drop table if exists roles CASCADE;
drop table if exists tickets CASCADE;
drop table if exists user_role CASCADE;
drop table if exists users CASCADE;

create table if not exists available_place (
    id bigint generated by default as identity,
    a1 integer, a2 integer, b1 integer, b2 integer, b3 integer, lounge integer,
    primary key (id));

create table if not exists events (
    event_id bigint generated by default as identity,
    date varchar(255),
    name varchar(255),
    status integer,
    places_id bigint,
    primary key (event_id));

create table if not exists roles (
    role_id integer generated by default as identity,
    role varchar(255),
    primary key (role_id));

create table if not exists tickets (
    ticket_id bigint generated by default as identity,
    event varchar(255),
    price float,
    sector integer,
    status integer,
    ticket_user varchar(255),
    primary key (ticket_id));

create table if not exists user_role (
    user_id bigint not null,
    role_id integer not null);

create table if not exists users (
    user_id bigint generated by default as identity,
    fullname varchar(255),
    password varchar(255),
    username varchar(255),
    primary key (user_id));

alter table roles add constraint UK_g50w4r0ru3g9uf6i6fr4kpro8 unique (role);
alter table users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username);
alter table events add constraint FKjqnyy8p0wqk5mqtoessqmapke foreign key (places_id) references available_place;
alter table tickets add constraint FKc3hf3ec85snuo8fckf7hneg7 foreign key (ticket_user) references users;
alter table user_role add constraint FKt7e7djp752sqn6w22i6ocqy6q foreign key (role_id) references roles;
alter table user_role add constraint FKj345gk1bovqvfame88rcx7yyx foreign key (user_id) references users;